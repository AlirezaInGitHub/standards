swagger: '2.0'
info:
  title: Consumer Data Standards
  description: API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
  version: '1'
  license:
    name: MIT Licence
    url: 'https://opensource.org/licenses/MIT'
host: data.provider.com.au
basePath: /cds-au/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /banking/accounts:
    get:
      summary: Get Accounts
      description: Obtain a list of accounts
      operationId: listAccounts
      tags:
        - Accounts
      parameters:
        - $ref: '#/parameters/ParamAccountOpenStatus'
        - $ref: '#/parameters/ParamProductCategory'
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
        - $ref: '#/parameters/ParamStartTime'
        - $ref: '#/parameters/ParamEndTime'
        - $ref: '#/parameters/ParamTransactionMinAmount'
        - $ref: '#/parameters/ParamTransactionMaxAmount'
        - $ref: '#/parameters/ParamTransactionText'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingAccounts'
      x-version: '1'
  '/banking/accounts/{accountId}':
    get:
      summary: Get Account Detail
      description: Obtain detailed information on a single account
      operationId: getAccountDetail
      tags:
        - Accounts
      parameters:
        - name: accountId
          in: path
          description: A tokenised identifier for the account which is unique but not shareable
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingAccount'
      x-version: '1'
  /banking/accounts/balances:
    get:
      summary: Get Bulk Balances
      description: 'Obtain balances for multiple, filtered accounts'
      operationId: listBalancesBulk
      tags:
        - Accounts
      parameters:
        - $ref: '#/parameters/ParamProductCategory'
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
      responses:
        '200':
          description: resource listing the financial balances for the account
          schema:
            $ref: '#/definitions/ResponseBankingAccountsBalances'
      x-version: '1'
    post:
      summary: Get Balances For Specific Accounts
      description: Obtain balances for a specified list of accounts
      operationId: listBalancesSpecificAccounts
      tags:
        - Accounts
      parameters:
        - name: accountIds
          in: body
          description: The list of account IDs to obtain information for
          required: true
          schema:
            $ref: '#/definitions/RequestAccountIds'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingAccountsBalances'
        '422':
          description: The request was well formed but was unable to be processed due to business logic specific to the request
          schema:
            $ref: '#/definitions/ErrorList'
      x-version: '1'
  '/banking/accounts/{accountId}/transactions':
    get:
      summary: Get Transactions For Account
      description: Obtain transactions for a specific account
      operationId: getTransactions
      tags:
        - Accounts
      parameters:
        - name: accountId
          in: path
          description: ID of the account to get transactions for.  Must have previously been returned by one of the account list end points.
          required: true
          type: string
        - $ref: '#/parameters/ParamStartTime'
        - $ref: '#/parameters/ParamEndTime'
        - $ref: '#/parameters/ParamTransactionMinAmount'
        - $ref: '#/parameters/ParamTransactionMaxAmount'
        - $ref: '#/parameters/ParamTransactionText'
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingTransactions'
      x-version: '1'
  '/banking/accounts/{accountId}/transactions/{transactionId}':
    get:
      summary: Get Transaction Detail
      description: Obtain detailed information on a transaction for a specific account
      operationId: getTransactionDetail
      tags:
        - Accounts
      parameters:
        - name: accountId
          in: path
          description: The account id token that is used to uniquely represent the account
          required: true
          type: string
        - name: transactionId
          in: path
          description: The unique identifier for the specific transaction for which details are being requested
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingTransactionDetail'
      x-version: '1'
  /banking/accounts/transactions:
    get:
      summary: Get Transactions For Multiple Accounts
      description: 'Obtain transactions for multiple, filtered accounts'
      operationId: listTransactionsBulk
      tags:
        - Accounts
      parameters:
        - $ref: '#/parameters/ParamProductCategory'
        - $ref: '#/parameters/ParamStartTime'
        - $ref: '#/parameters/ParamEndTime'
        - $ref: '#/parameters/ParamTransactionMinAmount'
        - $ref: '#/parameters/ParamTransactionMaxAmount'
        - $ref: '#/parameters/ParamTransactionText'
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingTransactions'
      x-version: '1'
    post:
      summary: Get Transactions For Specific Accounts
      description: Obtain transactions for a specified list of transactions.
      operationId: listTransactionsSpecificAccounts
      tags:
        - Accounts
      parameters:
        - $ref: '#/parameters/ParamStartTime'
        - $ref: '#/parameters/ParamEndTime'
        - $ref: '#/parameters/ParamTransactionMinAmount'
        - $ref: '#/parameters/ParamTransactionMaxAmount'
        - $ref: '#/parameters/ParamTransactionText'
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
        - name: accountIds
          in: body
          description: The list of account IDs to obtain information for
          required: true
          schema:
            $ref: '#/definitions/RequestAccountIds'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingTransactions'
        '422':
          description: The request was well formed but was unable to be processed due to business logic specific to the request
          schema:
            $ref: '#/definitions/ErrorList'
      x-version: '1'
  '/banking/accounts/{accountId}/direct-debits':
    get:
      summary: Get Direct Debits For Account
      description: Obtain direct debit authorisations for a specific account
      operationId: listDirectDebits
      tags:
        - Direct Debits
      parameters:
        - name: accountId
          in: path
          description: ID of the account to get direct debit authorisations for.  Must have previously been returned by one of the account list end points.
          required: true
          type: string
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingDirectDebits'
      x-version: '1'
  /banking/accounts/direct-debits:
    get:
      summary: Get Bulk Direct Debits
      description: 'Obtain direct debit authorisations for multiple, filtered accounts'
      operationId: listDirectDebitsBulk
      tags:
        - Direct Debits
      parameters:
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
        - $ref: '#/parameters/ParamProductCategory'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingDirectDebits'
      x-version: '1'
    post:
      summary: Get Direct Debits For Specific Accounts
      description: Obtain direct debit authorisations for a specified list of accounts
      operationId: listDirectDebitsSpecificAccounts
      tags:
        - Direct Debits
      parameters:
        - name: accountIds
          in: body
          description: The list of account IDs to obtain information for
          required: true
          schema:
            $ref: '#/definitions/RequestAccountIds'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingDirectDebits'
        '422':
          description: The request was well formed but was unable to be processed due to business logic specific to the request
          schema:
            $ref: '#/definitions/ErrorList'
      x-version: '1'
  /banking/payees:
    get:
      summary: Get Payees
      description: Obtain a list of pre-registered payees
      operationId: listPayees
      tags:
        - Payees
      parameters:
        - name: type
          in: query
          description: 'Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL'
          required: false
          type: string
          enum:
            - DOMESTIC
            - INTERNATIONAL
            - BILLER
          default: ALL
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingPayees'
      x-version: '1'
  '/banking/payees/{payeeId}':
    get:
      summary: Get Payee Detail
      description: Obtain detailed information on a single payee
      operationId: getPayeeDetail
      tags:
        - Payees
      parameters:
        - name: payeeId
          in: path
          description: The ID used to locate the details of a particular payee
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingPayeeDetails'
      x-version: '1'
  /banking/products:
    get:
      summary: Get Products
      description: Obtain a list of products that are currently openly offered to the market
      operationId: listProducts
      tags:
        - Products
      parameters:
        - name: effective
          in: query
          description: If true then only include products that are effective right now and exclude products that may be available at a future time. If false only include products effective in the future. If absent defaults to include all products
          required: false
          type: boolean
        - name: updated-since
          in: query
          description: Only include products that have been updated after the specified date and time. If absent defaults to include all products
          required: false
          type: string
        - name: brand
          in: query
          description: Filter results based on a specific brand
          required: false
          type: string
        - $ref: '#/parameters/ParamProductCategory'
        - $ref: '#/parameters/ParamPage'
        - $ref: '#/parameters/ParamPageSize'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingProducts'
      x-version: '1'
  '/banking/products/{productId}':
    get:
      summary: Get Product Detail
      description: Obtain detailed information on a single product offered openly to the market
      operationId: getProductDetail
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          description: ID of the specific product requested
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseBankingProduct'
      x-version: '1'
  /common/customer:
    get:
      summary: Get Customer
      description: Obtain basic information on the customer that has authorised the current session
      operationId: getCustomer
      tags:
        - Customer
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseCommonCustomer'
      x-version: '1'
  /common/customer/detail:
    get:
      summary: Get Customer Detail
      description: Obtain detailed information on the authorised customer within the current session.
      operationId: getCustomerDetail
      tags:
        - Customer
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseCommonCustomerDetailed'
      x-version: '1'
parameters:
  ParamAccountOpenStatus:
    name: open-status
    in: query
    description: 'Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed'
    required: false
    type: string
    enum:
      - OPEN
      - CLOSED
      - ALL
    default: ALL
  ParamProductCategory:
    name: product-category
    in: query
    description: Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
    required: false
    type: string
    enum:
      - PERS_AT_CALL_DEPOSITS
      - BUS_AT_CALL_DEPOSITS
      - TERM_DEPOSITS
      - RESIDENTIAL_MORTGAGES
      - PERS_CRED_AND_CHRG_CARDS
      - BUS_CRED_AND_CHRG_CARDS
      - PERS_LOANS
      - PERS_LEASING
      - BUS_LEASING
      - TRADE_FINANCE
      - PERS_OVERDRAFT
      - BUS_OVERDRAFT
      - BUS_LOANS
      - FOREIGN_CURR_AT_CALL_DEPOSITS
      - FOREIGN_CURR_TERM_DEPOSITS
      - FOREIGN_CURR_LOAN
      - FOREIGN_CURRRENCT_OVERDRAFT
      - TRAVEL_CARD
  ParamPage:
    name: page
    in: query
    description: Page of results to request (standard pagination)
    required: false
    type: integer
    default: '1'
  ParamPageSize:
    name: page-size
    in: query
    description: Page size to request. Default is 25 (standard pagination)
    required: false
    type: integer
    default: '25'
  ParamStartTime:
    name: start-time
    in: query
    description: Constrain the transaction history request to transactions with effective time at or after this date/time. If absent defaults to today. Format is aligned to DateTimeString common type
    required: false
    type: string
  ParamEndTime:
    name: end-time
    in: query
    description: Constrain the transaction history request to transactions with effective time at or before this date/time. If absent defaults to start-time plus 100 days. Format is aligned to DateTimeString common type
    required: false
    type: string
  ParamTransactionMinAmount:
    name: min-amount
    in: query
    description: Filter transactions to only transactions with amounts higher or equal to than this amount
    required: false
    type: string
  ParamTransactionMaxAmount:
    name: max-amount
    in: query
    description: Filter transactions to only transactions with amounts less than or equal to than this amount
    required: false
    type: string
  ParamTransactionText:
    name: text
    in: query
    description: Filter transactions to only transactions where this string value is found as a substring of either the reference or description fields. Format is arbitrary ASCII string
    required: false
    type: string
definitions:
  RequestAccountIds:
    type: object
    required:
      - data
      - meta
    properties:
      data:
        type: object
        required:
          - accountIds
        properties:
          accountIds:
            type: array
            items:
              type: string
              description: A valid account ID previously obtained from another end point
      meta:
        $ref: '#/definitions/Meta'
  ResponseBankingProducts:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - products
        properties:
          products:
            type: array
            items:
              $ref: '#/definitions/Product'
      links:
        $ref: '#/definitions/LinksPaginated'
      meta:
        $ref: '#/definitions/MetaPaginated'
  Product:
    type: object
    required:
      - productId
      - lastUpdated
      - productCategory
      - name
      - description
      - brand
      - isNegotiable
    properties:
      productId:
        type: string
        description: A provider specific unique identifier for this product. This identifier must be unique to a product but does not otherwise need to adhere to ID permanence guidelines.
        format: ASCIIString
      effectiveFrom:
        type: string
        description: The date and time from which this product is effective (ie. is available for origination)
        format: DateTimeString
      effectiveTo:
        type: string
        description: The date and time at which this product will be retired and will no longer be offered
        format: DateTimeString
      lastUpdated:
        type: string
        description: The last date and time that the information for this product was changed (or the creation date for the product if it has never been altered)
        format: DateTimeString
      productCategory:
        $ref: '#/definitions/EnumProductCategory'
      name:
        type: string
        description: The display name of the product
      description:
        type: string
        description: A description of the product
      brand:
        type: string
        description: A label of the brand for the product. Able to be used for filtering. For data providers with single brands this value is still required
      brandName:
        type: string
        description: An optional display name of the brand
      applicationUri:
        type: string
        description: A link to the an application web page where this product can be applied for.
      isNegotiable:
        type: boolean
        description: Indicates whether the product is specifically designed so that fees and prices are negotiated depending on context. While all products are open to a degree of negotiation this flag indicates that negotiation is expected and thus that the provision of specific fees and rates is not applicable
      additionalInformation:
        type: object
        properties:
          overviewUri:
            type: string
            description: General overview of the product
            format: URIString
          termsUri:
            type: string
            description: Terms and conditions for the product
            format: URIString
          eligibilityUri:
            type: string
            description: Eligibility rules and criteria for the product
            format: URIString
          feesAndPricingUri:
            type: string
            description: 'Description of fees, pricing, discounts, exemptions and bonuses for the product'
            format: URIString
          bundleUri:
            type: string
            description: Description of a bundle that this product can be part of
            format: URIString
  ResponseBankingProduct:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        $ref: '#/definitions/ProductDetail'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
  ProductDetail:
    allOf:
      - $ref: '#/definitions/Product'
      - type: object
        properties:
          bundles:
            type: array
            items:
              $ref: '#/definitions/ProductBundles'
          features:
            type: array
            items:
              $ref: '#/definitions/ProductFeatures'
          constraints:
            type: array
            items:
              $ref: '#/definitions/ProductConstraints'
          eligibility:
            type: array
            items:
              $ref: '#/definitions/ProductEligibility'
          fees:
            type: array
            items:
              $ref: '#/definitions/ProductFees'
          depositRates:
            type: array
            items:
              $ref: '#/definitions/ProductDepositRates'
          lendingRates:
            type: array
            items:
              $ref: '#/definitions/ProductLendingRates'
  ProductBundles:
    type: object
    required:
      - name
      - description
      - productIds
    properties:
      name:
        type: string
        description: Name of the bundle
      description:
        type: string
        description: Description of the bundle
      additionalInfoUri:
        type: string
        description: Link to a web page with more information on the bundle criteria and benefits
        format: URIString
      productIds:
        type: array
        description: Array of product IDs for products included in the bundle
        items:
          type: string
  ProductFeatures:
    type: object
    required:
      - featureType
    properties:
      featureType:
        type: string
        description: The type of feature described
        enum:
          - CARD_ACCESS
          - ADDITIONAL_CARDS
          - UNLIMITED_TXNS
          - FREE_TXNS
          - FREE_TXNS_ALLOWANCE
          - LOYALTY_PROGRAM
          - OFFSET
          - OVERDRAFT
          - REDRAW
          - INSURANCE
          - BALANCE_TRANSFERS
          - INTEREST_FREE
          - INTEREST_FREE_TRANSFERS
          - DIGITAL_WALLET
          - DIGITAL_BANKING
          - NPP_PAYID
          - NPP_ENABLED
          - DONATE_INTEREST
          - BILL_PAYMENT
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of featureType
  ProductConstraints:
    type: object
    required:
      - constraintType
    properties:
      constraintType:
        type: string
        description: The type of constraint described.  See the next section for an overview of valid values and their meaning
        enum:
          - MIN_BALANCE
          - OPENING_BALANCE
          - MAX_LIMIT
          - MIN_LIMIT
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the constraintType specified.  Whether mandatory or not is dependent on the value of constraintType
  ProductEligibility:
    type: object
    required:
      - eligibilityType
    properties:
      eligibilityType:
        type: string
        description: The type of eligibility criteria described.  See the next section for an overview of valid values and their meaning
        enum:
          - BUSINESS
          - PENSION_RECIPIENT
          - MIN_AGE
          - MAX_AGE
          - MIN_INCOME
          - MIN_TURNOVER
          - STAFF
          - STUDENT
          - EMPLOYMENT_STATUS
          - RESIDENCY_STATUS
          - OTHER
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the eligibilityType specified.  Whether mandatory or not is dependent on the value of eligibilityType
      additionalInfo:
        type: string
        description: Display text providing more information on the eligibility criteria. Mandatory if the eligibilityType field is set to OTHER
      additionalInfoUri:
        type: string
        description: Link to a web page with more information on this eligibility criteria
        format: URIString
  ProductFees:
    type: object
    required:
      - name
      - feeType
    properties:
      name:
        type: string
        description: Name of the fee
      feeType:
        type: string
        description: The type of fee
        enum:
          - PERIODIC
          - TRANSACTION
          - ESTABLISHMENT
          - EXIT
          - OVERDRAW
          - MIN_BALANCE
          - REDRAW
          - CHEQUE_CASH
          - CHEQUE_STOP
          - CHEQUE_BOOK
          - CARD_REPLACE
          - PAPER_STATEMENT
          - OTHER_EVENT
      amount:
        type: string
        description: 'The amount charged for the fee. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory'
        format: AmountString
      balanceRate:
        type: string
        description: 'A fee rate calculated based on a proportion of the balance. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory'
        format: RateString
      transactionRate:
        type: string
        description: 'A fee rate calculated based on a proportion of a transaction. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory'
        format: RateString
      currency:
        type: string
        description: The currency the fee will be charged in. Assumes AUD if absent
        format: CurrencyString
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the feeType specified. Whether mandatory or not is dependent on the value of feeType
      additionalInfo:
        type: string
        description: Display text providing more information on the fee
      additionalInfoUri:
        type: string
        description: Link to a web page with more information on this fee
        format: URIString
      discounts:
        type: array
        items:
          $ref: '#/definitions/ProductDiscounts'
  ProductDiscounts:
    type: object
    required:
      - description
      - discountType
      - amount
    properties:
      description:
        type: string
        description: Description of the discount
      discountType:
        type: string
        description: The type of discount. See the next section for an overview of valid values and their meaning
        enum:
          - BALANCE
          - DEPOSITS
          - PAYMENTS
          - BUNDLE
      amount:
        type: string
        description: Value of the discount. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself
        format: AmountString
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType
  ProductDepositRates:
    type: object
    required:
      - depositRateType
      - rate
    properties:
      depositRateType:
        type: string
        description: 'The type of rate (base, bonus, etc). See the next section for an overview of valid values and their meaning'
        enum:
          - FIXED
          - BONUS
          - BUNDLE_BONUS
          - VARIABLE
          - INTRODUCTORY
      rate:
        type: string
        description: The rate to be applied
        format: RateString
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType
      additionalInfo:
        type: string
        description: Display text providing more information on the fee
      additionalInfoUri:
        type: string
        description: Link to a web page with more information on this fee
        format: URIString
  ProductLendingRates:
    type: object
    required:
      - lendingRateType
      - rate
    properties:
      lendingRateType:
        type: string
        description: 'The type of rate (fixed, variable, etc). See the next section for an overview of valid values and their meaning'
        enum:
          - FIXED
          - INTRODUCTORY
          - DISCOUNT
          - PENALTY
          - BUNDLE_DISCOUNT
          - FLOATING
          - MARKET_LINKED
          - CASH_ADVANCE
          - VARIABLE
          - COMPARISON
      rate:
        type: string
        description: The rate to be applied
        format: RateString
      additionalValue:
        type: string
        description: Information relevant to the lendingRateType specified.  Whether mandatory or not is dependent on the Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType
      additionalInfo:
        type: string
        description: Display text providing more information on the fee.
      additionalInfoUri:
        type: string
        description: Link to a web page with more information  on this fee
        format: URIString
  ResponseBankingAccounts:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - accounts
        properties:
          accounts:
            type: array
            items:
              $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/LinksPaginated'
      meta:
        $ref: '#/definitions/MetaPaginated'
  Account:
    type: object
    required:
      - accountId
      - displayName
      - maskedNumber
      - productCategory
      - providerType
      - balance$type
    properties:
      accountid:
        type: string
        description: A unique ID of the account adhering to the standards for ID permanence
        format: ASCIIString
      displayName:
        type: string
        description: The display name of the account. If a customer provided nickname is available that value should be returned
      nickname:
        type: string
        description: A customer supplied nick name for the account
      maskedNumber:
        type: string
        description: 'A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number this should be formatted with each digit masked and the last three digits unmasked'
        format: MaskedAccountString
      productCategory:
        $ref: '#/definitions/EnumProductCategory'
      providerType:
        type: string
        description: The unique type as defined by the account provider
      balance$type:
        type: string
        description: 'The type of balance object provided for the account. Must be one of: debit Debit Balance Type (see above) Conditional credit Credit Balance Type (see above) Conditional Multi Currency Purses Type (see above) Conditional purses debit credit purses'
        enum:
          - deposits
          - lending
          - purses
      deposits:
        $ref: '#/definitions/DepositsBalance'
      lending:
        $ref: '#/definitions/LendingBalance'
      purses:
        type: array
        items:
          $ref: '#/definitions/CurrencyAmount'
  ResponseBankingAccount:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        $ref: '#/definitions/AccountDetail'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
  AccountDetail:
    allOf:
      - $ref: '#/definitions/Account'
      - type: object
        required:
          - address$type
        properties:
          bundleName:
            type: string
            description: Optional field to indicate if this account is part of a bundle that is providing additional benefit for to the customer
          specificAccount$type:
            type: string
            description: The type of structure to present account specific fields.
            enum:
              - termDeposit
              - creditCard
              - loan
          termDeposit:
            $ref: '#/definitions/TermDepositAccount'
          creditCard:
            $ref: '#/definitions/CreditCardAccount'
          loan:
            $ref: '#/definitions/LoanAccount'
          features:
            type: array
            items:
              $ref: '#/definitions/AccountFeatures'
          fees:
            type: array
            items:
              $ref: '#/definitions/AccountFees'
          depositRates:
            type: array
            items:
              $ref: '#/definitions/AccountDepositRates'
          lendingRates:
            type: array
            items:
              $ref: '#/definitions/AccountLendingRates'
          address:
            type: object
            required:
              - address$type
            properties:
              address$type:
                type: string
                description: The type of address object present
                enum:
                  - simple
                  - paf
              simple:
                $ref: '#/definitions/SimpleAddress'
              paf:
                $ref: '#/definitions/PAFAddress'
  TermDepositAccount:
    type: object
    required:
      - lodgementDate
      - maturityDate
      - maturityInstructions
    properties:
      lodgementDate:
        type: string
        description: The lodgement date of the original deposit
        format: DateTimeString
      maturityDate:
        type: string
        description: Maturity date for the term deposit
        format: DateTimeString
      maturityAmount:
        type: string
        description: Amount to be paid upon maturity. If absent it implies the amount to paid is variable and cannot currently be calculated
        format: AmountString
      maturityCurrency:
        type: string
        description: If absent assumes AUD
        format: CurrencyString
      maturityInstructions:
        type: string
        description: Current instructions on action to be taken at maturity
        enum:
          - ROLLED_OVER
          - PAID_OUT_AT_MATURITY
  CreditCardAccount:
    type: object
    required:
      - minPaymentAmount
      - paymentDueAmount
      - paymentDueDate
    properties:
      minPaymentAmount:
        type: string
        description: The minimum payment amount due for the next card payment
        format: AmountString
      paymentDueAmount:
        type: string
        description: The amount due for the next card payment
        format: AmountString
      paymentCurrency:
        type: string
        description: If absent assumes AUD
        format: CurrencyString
      paymentDueDate:
        type: string
        description: Date that the next payment for the card is due
        format: DateTimeString
  LoanAccount:
    type: object
    required:
      - loanEndDate
      - nextInstalmentDate
      - minInstalmentAmount
      - repaymentFrequency
    properties:
      originalStartDate:
        type: string
        description: Optional original start date for the loan
        format: DateTimeString
      originalLoanAmount:
        type: string
        description: Optional original loan value
        format: AmountString
      originalLoanCurrency:
        type: string
        description: If absent assumes AUD
        format: CurrencyString
      loanEndDate:
        type: string
        description: Date that the loan is due to be repaid in full
        format: DateTimeString
      nextInstalmentDate:
        type: string
        description: Next date that an instalment is required
        format: DateTimeString
      minInstalmentAmount:
        type: string
        description: Minimum amount of next instalment
        format: AmountString
      minInstalmentCurrency:
        type: string
        description: If absent assumes AUD
        format: CurrencyString
      maxRedraw:
        type: string
        description: Maximum amount of funds that can be redrawn. If not present redraw is not available even if the feature exists for the account
        format: AmountString
      maxRedrawCurrency:
        type: string
        description: If absent assumes AUD
        format: CurrencyString
      minRedraw:
        type: string
        description: Minimum redraw amount
      minRedrawCurrency:
        type: string
        description: If absent assumes AUD
        format: CurrencyString
      offsetAccountEnabled:
        type: boolean
        description: Set to true if one or more offset accounts are configured for this loan account
      offsetAccountIds:
        type: array
        description: The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accesses under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation
        items:
          type: string
      repaymentType:
        type: string
        description: Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST
      repaymentFrequency:
        type: string
        description: The expected or required repayment frequency. Formatted according to ISO 8601 Durations
        enum:
          - INTEREST_ONLY
          - PRINCIPAL_AND_INTEREST
  AccountFeatures:
    type: object
    required:
      - featureType
    properties:
      featureType:
        type: string
        description: The type of feature described
        enum:
          - CARD_ACCESS
          - ADDITIONAL_CARDS
          - UNLIMITED_TXNS
          - FREE_TXNS
          - FREE_TXNS_ALLOWANCE
          - LOYALTY_PROGRAM
          - OFFSET
          - OVERDRAFT
          - REDRAW
          - INSURANCE
          - BALANCE_TRANSFERS
          - INTEREST_FREE
          - INTEREST_FREE_TRANSFERS
          - DIGITAL_WALLET
          - DIGITAL_BANKING
          - NPP_PAYID
          - NPP_ENABLED
          - DONATE_INTEREST
          - BILL_PAYMENT
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of featureType
  AccountFees:
    type: object
    required:
      - name
      - feeType
    properties:
      name:
        type: string
        description: Name of the fee
      feeType:
        type: string
        description: The type of fee
        enum:
          - PERIODIC
          - TRANSACTION
          - EXIT
          - OVERDRAW
          - MIN_BALANCE
          - REDRAW
          - CHEQUE_CASH
          - CHEQUE_STOP
          - CHEQUE_BOOK
          - CARD_REPLACE
          - PAPER_STATEMENT
          - OTHER_EVENT
      amount:
        type: string
        description: 'The amount charged for the fee. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory'
        format: AmountString
      balanceRate:
        type: string
        description: 'A fee rate calculated based on a proportion of the balance. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory'
        format: RateString
      transactionRate:
        type: string
        description: 'A fee rate calculated based on a proportion of a transaction. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory'
        format: RateString
      currency:
        type: string
        description: The currency the fee will be charged in. Assumes AUD if absent
        format: CurrencyString
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the feeType specified. Whether mandatory or not is dependent on the value of feeType
      additionalInfo:
        type: string
        description: Display text providing more information on the fee
      additionalInfoUri:
        type: string
        description: Link to a web page with more information on this fee
        format: URIString
      discounts:
        type: array
        items:
          $ref: '#/definitions/AccountDiscounts'
  AccountDiscounts:
    type: object
    required:
      - description
      - discountType
      - amount
    properties:
      description:
        type: string
        description: Description of the discount
      discountType:
        type: string
        description: The type of discount. See the next section for an overview of valid values and their meaning
        enum:
          - BALANCE
          - DEPOSITS
          - PAYMENTS
          - BUNDLE
      amount:
        type: string
        description: Value of the discount. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself
        format: AmountString
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType
  AccountDepositRates:
    type: object
    required:
      - depositRateType
      - rate
    properties:
      depositRateType:
        type: string
        description: 'The type of rate (base, bonus, etc). See the next section for an overview of valid values and their meaning'
        enum:
          - FIXED
          - BONUS
          - BUNDLE_BONUS
          - VARIABLE
          - INTRODUCTORY
      rate:
        type: string
        description: The rate to be applied
        format: RateString
      additionalValue:
        type: string
        description: Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType
      additionalInfo:
        type: string
        description: Display text providing more information on the fee
      additionalInfoUri:
        type: string
        description: Link to a web page with more information on this fee
        format: URIString
  AccountLendingRates:
    type: object
    required:
      - lendingRateType
      - rate
    properties:
      lendingRateType:
        type: string
        description: 'The type of rate (fixed, variable, etc). See the next section for an overview of valid values and their meaning'
        enum:
          - FIXED
          - INTRODUCTORY
          - DISCOUNT
          - PENALTY
          - BUNDLE_DISCOUNT
          - FLOATING
          - MARKET_LINKED
          - CASH_ADVANCE
          - VARIABLE
          - COMPARISON
      rate:
        type: string
        description: The rate to be applied
        format: RateString
      additionalValue:
        type: string
        description: Information relevant to the lendingRateType specified.  Whether mandatory or not is dependent on the Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType
      additionalInfo:
        type: string
        description: Display text providing more information on the fee.
      additionalInfoUri:
        type: string
        description: Link to a web page with more information  on this fee
        format: URIString
  ResponseBankingTransactions:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - transactions
        properties:
          accountId:
            type: string
            description: ID of the account for which transactions are provided
            format: ASCIIString
          displayName:
            type: string
            description: The display name of the account as defined by the bank.  This should not incorporate account numbers or PANs.  If it does the values should be masked according to the rules of the MaskedAccountString common type.
          nickname:
            type: string
            description: A customer supplied nick name for the account
          transactions:
            type: array
            items:
              $ref: '#/definitions/Transaction'
      links:
        $ref: '#/definitions/LinksPaginated'
      meta:
        $ref: '#/definitions/MetaPaginated'
  Transaction:
    type: object
    required:
      - accountId
      - isDetailAvailable
      - status
      - description
      - reference
    properties:
      accountId:
        type: string
        description: A unique ID of the account adhering to the standards for ID permanence
        format: ASCIIString
      transactionid:
        type: string
        description: A unique ID of the transaction adhering to the standards for ID permanence. This is mandatory (through hashing if necessary) unless there are specific and justifiable technical reasons why a transaction cannot be uniquely identified for a particular account type
        format: ASCIIString
      isDetailAvailable:
        type: boolean
        description: True if extended information is available using the transaction detail end point. False if extended data is not available
      status:
        type: string
        description: Status of the transaction
        enum:
          - PENDING
          - POSTED
      description:
        type: string
        description: The transaction description as applied by the financial institution
      postDateTime:
        type: string
        description: The time the transaction was posted. This field is mandatory if the transaction has status POSTED. This is the time that appears on a standard statement
        format: DateTimeString
      executionDateTime:
        type: string
        description: 'The time the transaction was executed by the originating customer, if available'
        format: DateTimeString
      amount:
        type: string
        description: The value of the transaction. Negative values mean money was outgoing
        format: AmountString
      currency:
        type: string
        description: The currency for the transaction amount. AUD assumed if not present
        format: CurrencyString
      reference:
        type: string
        description: The reference for the transaction provided by the originating institution
  ResponseBankingTransactionDetail:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - accountId
          - displayName
          - transaction
        properties:
          accountId:
            type: string
            description: ID of the account for which transactions are provided
            format: ASCIIString
          displayName:
            type: string
            description: The display name of the account as defined by the bank.  This should not incorporate account numbers or PANs.  If it does the values should be masked according to the rules of the MaskedAccountString common type.
          nickname:
            type: string
            description: A customer supplied nick name for the account
          transaction:
            type: array
            items:
              $ref: '#/definitions/TransactionDetail'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
  TransactionDetail:
    allOf:
      - $ref: '#/definitions/Transaction'
      - type: object
        required:
          - extendedData
        properties:
          extendedData:
            type: object
            required:
              - service
            properties:
              payer:
                type: string
                description: Label of the originating payer.  Mandatory for inbound payment
              payee:
                type: string
                description: Label of the target PayID. Mandatory for an outbound payment
              extension$type:
                type: string
                description: Optional extended data provided specific to transaction originated via NPP
                enum:
                  - extendedDescription
              extendedDescription:
                type: string
                description: An extended string description. Only present if specified by the extensionType field
              service:
                type: string
                description: Identifier of the applicable overlay service
                enum:
                  - X2P1.01
  ResponseBankingAccountsBalances:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - balances
        properties:
          balances:
            type: array
            items:
              $ref: '#/definitions/Balance'
      links:
        $ref: '#/definitions/LinksPaginated'
      meta:
        $ref: '#/definitions/MetaPaginated'
  Balance:
    type: object
    required:
      - accountId
      - balance$type
    properties:
      accountid:
        type: string
        description: A unique ID of the account adhering to the standards for ID permanence
      balance$type:
        type: string
        description: The type of balance object provided for the account
        enum:
          - debit
          - lending
          - purses
      deposits:
        $ref: '#/definitions/DepositsBalance'
      lending:
        $ref: '#/definitions/LendingBalance'
      purses:
        type: array
        items:
          $ref: '#/definitions/CurrencyAmount'
  DepositsBalance:
    type: object
    required:
      - currentBalance
      - availableBalance
    properties:
      currentBalance:
        $ref: '#/definitions/CurrencyAmount'
      availableBalance:
        $ref: '#/definitions/CurrencyAmount'
  LendingBalance:
    type: object
    required:
      - accountBalance
      - availableBalance
      - creditLimit
    properties:
      accountBalance:
        $ref: '#/definitions/CurrencyAmount'
      availableBalance:
        $ref: '#/definitions/CurrencyAmount'
      creditLimit:
        $ref: '#/definitions/CurrencyAmount'
      amortisedLimit:
        $ref: '#/definitions/CurrencyAmount'
  CurrencyAmount:
    type: object
    required:
      - amount
    properties:
      amount:
        type: string
        description: The current balance of the account at this time. Should align to the current balance available via other channels such as ATM balance enquiry or Internet Banking
        format: AmountString
      currency:
        type: string
        description: If not present assumes AUD
        format: CurrencyString
  ResponseBankingPayees:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - payees
        properties:
          payees:
            type: array
            description: The list of payees returned
            items:
              $ref: '#/definitions/Payee'
      links:
        $ref: '#/definitions/LinksPaginated'
      meta:
        $ref: '#/definitions/MetaPaginated'
  ResponseBankingPayeeDetails:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        $ref: '#/definitions/PayeeDetail'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
  Payee:
    type: object
    required:
      - payeeId
      - nickname
      - type
    properties:
      payeeId:
        type: string
        description: ID of the payee adhering to the rules of ID permanence
      nickname:
        type: string
        description: The short display name of the payee as provided by the customer
      description:
        type: string
        description: A description of the payee provided by the customer
      type:
        type: string
        description: The type of payee. DOMESTIC means a registered payee for domestic payments including NPP. INTERNATIONAL means a registered payee for international payments. BILLER means a registered payee for BPAY
        enum:
          - DOMESTIC
          - INTERNATIONAL
          - BILLER
  PayeeDetail:
    allOf:
      - $ref: '#/definitions/Payee'
      - type: object
        required:
          - payee$type
        properties:
          payee$type:
            type: string
            description: Type of object included that describes the payee in detail
            enum:
              - domestic
              - biller
              - international
          domestic:
            $ref: '#/definitions/DomesticPayee'
          biller:
            $ref: '#/definitions/BillerPayee'
          international:
            $ref: '#/definitions/InternationalPayee'
  DomesticPayee:
    type: object
    required:
      - payeeAccount$type
    properties:
      payeeAccount$type:
        type: string
        description: 'Type of account object included. Valid values are: { payeeAccount$type - - account A standard Australian account defined by BSB/Account Number payId A PayID recognised by NPP'
        enum:
          - account
          - card
          - payid
      account:
        $ref: '#/definitions/DomesticPayeeAccount'
      card:
        $ref: '#/definitions/DomesticPayeeCard'
      payId:
        $ref: '#/definitions/DomesticPayeePayId'
  DomesticPayeeAccount:
    type: object
    required:
      - accountName
      - bsb
      - accountNumber
    properties:
      accountName:
        type: string
        description: Name of the account to pay to
      bsb:
        type: string
        description: BSB of the account to pay to
      accountNumber:
        type: string
        description: Number of the account to pay to
  DomesticPayeeCard:
    type: object
    required:
      - cardNumber
    properties:
      cardNumber:
        type: string
        description: Name of the account to pay to
        format: MaskedPANString
  DomesticPayeePayId:
    type: object
    required:
      - name
      - identifier
      - type
    properties:
      name:
        type: string
        description: The name assigned to the PayID by the owner of the PayID
      identifier:
        type: string
        description: The identifier of the PayID (dependent on type)
      type:
        type: string
        description: The type of the PayID
        enum:
          - EMAIL
          - MOBILE
          - ORG_NUMBER
          - ORG_NAME
  BillerPayee:
    type: object
    required:
      - billerCode
      - billerName
    properties:
      billerCode:
        type: string
        description: BPay Biller Code of the Biller
      crn:
        type: string
        description: BPay CRN of the Biller. If the contents of the CRN match the format of a Credit Card PAN then it should be masked using the rules applicable for the MaskedPANString common type
      billerName:
        type: string
        description: Name of the Biller
  InternationalPayee:
    type: object
    required:
      - beneficiaryDetails
      - bankDetails
    properties:
      beneficiaryDetails:
        type: object
        required:
          - country
        properties:
          name:
            type: string
            description: Name of the beneficiary
          country:
            type: string
            description: Country where the beneficiary resides
          message:
            type: string
            description: Response message for the payment
      bankDetails:
        type: object
        required:
          - country
          - accountNumber
        properties:
          country:
            type: string
            description: Country of the recipient institution
          accountNumber:
            type: string
            description: Account Targeted for payment
          bankAddress:
            type: object
            required:
              - name
              - address
            properties:
              name:
                type: string
                description: Name of the recipient Bank
              address:
                type: string
                description: Address of the recipient Bank
          beneficiaryBankBIC:
            type: string
            description: Swift bank code
          fedWireNumber:
            type: string
            description: Number for Fedwire payment (Federal Reserve Wire Network)
          sortCode:
            type: string
            description: Sort code used for account identification in some jurisdictions
          chipNumber:
            type: string
            description: Number for the Clearing House Interbank Payments System
          routingNumber:
            type: string
            description: International bank routing number
  ResponseBankingDirectDebits:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - directDebitAuthorisations
        properties:
          directDebitAuthorisations:
            type: array
            description: The list of authorisations returned
            items:
              $ref: '#/definitions/DirectDebits'
      links:
        $ref: '#/definitions/LinksPaginated'
      meta:
        $ref: '#/definitions/MetaPaginated'
  DirectDebits:
    type: object
    required:
      - accountId
    properties:
      accountId:
        type: string
        description: A unique ID of the account adhering to the standards for ID permanence.
        format: ASCIIString
      authorisedEntity:
        $ref: '#/definitions/AuthorisedEntity'
      lastDebitDateTime:
        type: string
        description: The date and time of the last debit executed under this authorisation
        format: DateTimeString
      lastDebitAmount:
        type: string
        description: The amount of the last debit executed under this authorisation
        format: AmountString
  AuthorisedEntity:
    type: object
    required:
      - name
      - financialInstitution
    properties:
      name:
        type: string
        description: Name of the authorised entity
      financialInstitution:
        type: string
        description: Name of the financial institution through which the direct debit will be executed
      abn:
        type: string
        description: Australian Business Number for the authorised entity
      acn:
        type: string
        description: Australian Business Number for the authorised entity
  ResponseCommonCustomer:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - customer$type
        properties:
          customer$type:
            type: string
            description: The type of customer object that is present
            enum:
              - person
              - organisation
          person:
            $ref: '#/definitions/Person'
          organisation:
            $ref: '#/definitions/Organisation'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
  ResponseCommonCustomerDetailed:
    type: object
    required:
      - data
      - links
      - meta
    properties:
      data:
        type: object
        required:
          - customer$type
        properties:
          customer$type:
            type: string
            description: The type of customer object that is present
            enum:
              - person
              - organisation
          person:
            $ref: '#/definitions/PersonDetail'
          organisation:
            $ref: '#/definitions/OrganisationDetail'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
  Person:
    type: object
    required:
      - lastUpdateTime
      - lastName
    properties:
      lastUpdateTime:
        type: string
        description: The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data
        format: DateTimeString
      firstName:
        type: string
        description: For people with single names this field need not be present.  The single name should be in the lastName field
      lastName:
        type: string
        description: For people with single names the single name should be in this field
      middleNames:
        type: array
        description: Field is mandatory but array may be empty
        items:
          type: string
      prefix:
        type: string
        description: 'Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc)'
      suffix:
        type: string
        description: Used for a trailing suffix to the name (e.g. Jr)
      occupationCode:
        type: string
        description: Occupation code as defined by the ANZSCO  v1.2 Standard Classification of Occupations
  PersonDetail:
    allOf:
      - $ref: '#/definitions/Person'
      - type: object
        required:
          - phoneNumbers
          - emailAddresses
          - physicalAddresses
        properties:
          phoneNumbers:
            type: array
            description: At least one record is required
            items:
              $ref: '#/definitions/PhoneNumber'
          emailAddresses:
            type: array
            description: May be empty
            items:
              $ref: '#/definitions/EmailAddress'
          physicalAddresses:
            type: array
            description: 'Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail'
            items:
              $ref: '#/definitions/PhysicalAddress'
  Organisation:
    type: object
    required:
      - lastUpdateTime
      - agentLastName
      - agentRole
      - businessName
      - organisationType
    properties:
      lastUpdateTime:
        type: string
        description: The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data
        format: DateTimeString
      agentFirstName:
        type: string
        description: The first name of the individual providing access on behalf of the organisation. For people with single names this field need not be present.  The single name should be in the lastName field
      agentLastName:
        type: string
        description: The last name of the individual providing access on behalf of the organisation. For people with single names the single name should be in this field
      agentRole:
        type: string
        description: The role of the individual identified as the agent who is providing authorisation.  Expected to be used for display.  Default to “Unspecified” if the role is not known
      businessName:
        type: string
        description: Name of the organisation
      legalName:
        type: string
        description: 'Legal name, if different to the business name'
      shortName:
        type: string
        description: 'Short name used for communication, if  different to the business name'
      abn:
        type: string
        description: Australian Business Number for the organisation
      acn:
        type: string
        description: Australian Company Number for the organisation. Required only if an ACN is applicable for the organisation type
      isACNCRegistered:
        type: boolean
        description: True if registered with the ACNC.  False if not. Absent or null if not confirmed.
      industryCode:
        type: string
        description: ANZSIC (2006) code for the organisation.
      organisationType:
        type: string
        description: Legal organisation type
        enum:
          - SOLE_TRADER
          - COMPANY
          - PARTNERSHIP
          - TRUST
          - GOVERNMENT_ENTITY
          - OTHER
      registeredCountry:
        type: string
        description: Enumeration with values from ISO 3166 Alpha-3 country codes.  Assumed to be AUS if absent
      establishmentDate:
        type: string
        description: The date the organisation described was established
        format: DateTimeString
  OrganisationDetail:
    allOf:
      - $ref: '#/definitions/Organisation'
      - type: object
        required:
          - physicalAddress
        properties:
          physicalAddress:
            type: array
            description: 'Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail'
            items:
              $ref: '#/definitions/PhysicalAddress'
  PhoneNumber:
    type: object
    required:
      - isPreferred
      - purpose
      - number
      - fullNumber
    properties:
      isPreferred:
        type: boolean
        description: Required to be true for one and only one entry to indicate the preferred phone number
      purpose:
        type: string
        description: The purpose of the number as specified by the customer
        enum:
          - MOBILE
          - HOME
          - WORK
          - OTHER
          - INTERNATIONAL
          - UNSPECIFIED
      countryCode:
        type: string
        description: 'If absent, assumed to be Australia (+61). The + should be included'
      areaCode:
        type: string
        description: 'Required for non Mobile Phones, if field is present and refers to Australian code - the leading 0 should be omitted.'
      number:
        type: string
        description: 'The actual phone number, with leading zeros as appropriate'
      extension:
        type: string
        description: An extension number (if applicable)
      fullNumber:
        type: string
        description: 'Fully formatted phone number with country code, area code, number and extension incorporated. Formatted according to section 5.1.4. of RFC 3966'
  EmailAddress:
    type: object
    required:
      - isPreferred
      - purpose
      - address
    properties:
      isPreferred:
        type: boolean
        description: Required for one and only one email record in the collection. Denotes the default email address
      purpose:
        type: string
        description: 'The purpose for the email, as specified by the customer (Enumeration)'
        enum:
          - WORK
          - HOME
          - OTHER
          - UNSPECIFIED
      address:
        type: string
        description: 'A correctly formatted email address, as defined by the addr_spec format in RFC_5322'
  PhysicalAddress:
    type: object
    required:
      - purpose
      - address$type
    properties:
      purpose:
        type: string
        description: Enumeration of values indicating the purpose of the physical address
        enum:
          - REGISTERED
          - MAIL
          - PHYSICAL
          - WORK
          - OTHER
      address$type:
        type: string
        description: The type of address object present
        enum:
          - simple
          - paf
      simple:
        $ref: '#/definitions/SimpleAddress'
      paf:
        $ref: '#/definitions/PAFAddress'
  SimpleAddress:
    type: object
    required:
      - addressLine1
      - city
      - state
    properties:
      mailingName:
        type: string
        description: Name of the individual or business formatted for inclusion in an address used for physical mail
      addressLine1:
        type: string
        description: First line of the standard address object
      addressLine2:
        type: string
        description: Second line of the standard address object
      addressLine3:
        type: string
        description: Third line of the standard address object
      postcode:
        type: string
        description: Mandatory for Australian addresses
      city:
        type: string
        description: Name of the city or locality
      state:
        type: string
        description: 'Free text if the country is not Australia. If country is Australia then must be one of the values defined by the ISO 3166:AU standard'
      country:
        type: string
        description: A valid ISO 3166 Alpha-3 country code
  PAFAddress:
    type: object
  Links:
    type: object
    properties:
      self:
        type: string
        description: Fully qualified link to this API call
        format: URIString
  Meta:
    type: object
  LinksPaginated:
    type: object
    properties:
      self:
        type: string
        description: Fully qualified link to this API call
        format: URIString
      first:
        type: string
        description: URI to the first page of this set. Mandatory if this response is not the first page
        format: URIString
      prev:
        type: string
        description: URI to the first previous page of this set. Mandatory if this response is not the first page
        format: URIString
      next:
        type: string
        description: URI to the first next page of this set. Mandatory if this response is not the last page
        format: URIString
      last:
        type: string
        description: URI to the first last page of this set. Mandatory if this response is not the last page
        format: URIString
  MetaPaginated:
    type: object
    properties:
      totalRecords:
        type: integer
        description: The total number of records in the full set
        format: NaturalNumber
      totalPages:
        type: integer
        description: The total number of pages in the full set
        format: NaturalNumber
  ErrorList:
    type: object
    required:
      - errors
    properties:
      errors:
        type: array
        items:
          type: object
          required:
            - code
            - title
            - detail
          properties:
            code:
              type: string
              description: The code of the error
            title:
              type: string
              description: A displayable title of the error type
            detail:
              type: string
              description: Detail of the error
            meta:
              type: object
              description: Optional additional data for specific error types
  EnumProductCategory:
    type: string
    description: The list of available product categories for categorising products and accounts
    enum:
      - PERS_AT_CALL_DEPOSITS
      - BUS_AT_CALL_DEPOSITS
      - TERM_DEPOSITS
      - RESIDENTIAL_MORTGAGES
      - PERS_CRED_AND_CHRG_CARDS
      - BUS_CRED_AND_CHRG_CARDS
      - PERS_LOANS
      - PERS_LEASING
      - BUS_LEASING
      - TRADE_FINANCE
      - PERS_OVERDRAFT
      - BUS_OVERDRAFT
      - BUS_LOANS
      - FOREIGN_CURR_AT_CALL_DEPOSITS
      - FOREIGN_CURR_TERM_DEPOSITS
      - FOREIGN_CURR_LOAN
      - FOREIGN_CURRRENCT_OVERDRAFT
      - TRAVEL_CARD
